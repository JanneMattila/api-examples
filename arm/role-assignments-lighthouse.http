# Scenario:
#
# Use Service Principal in service provider tenant to
# grant role assignments for managed identity in
# customer tenant.
#
# Permissions required:
# ---------------------
# - "User Account Administrator" - 18d7d88d-d35e-4fb5-a5c3-7773c20a72d9
#   https://docs.microsoft.com/en-us/azure/role-based-access-control/built-in-roles#user-access-administrator
# - "Managed Identity Contributor" - e40ec5ca-96e0-45a2-b4ff-59039f2c2b59
#   https://docs.microsoft.com/en-us/azure/role-based-access-control/built-in-roles#managed-identity-contributor
#
# If you only have "User Account Administrator" role you might get following error:
# {
#   "error": {
#     "code": "LinkedAuthorizationFailed",
#     "message": "The client '52735ef2-354c-45de-a919-675bd182e0bc' with object id '52735ef2-354c-45de-a919-675bd182e0bc' 
#      has permission to perform action 'Microsoft.Authorization/roleAssignments/write' on scope 
#      '/subscriptions/93013103-8e77-4792-93ad-a89cad1dd832'; however, 
#      it does not have permission to perform action 'Microsoft.ManagedIdentity/userAssignedIdentities/write' 
#      on the linked scope(s) '/subscriptions/39...223/resourceGroups/rg-mi-northeurope/providers/Microsoft.ManagedIdentity/userAssignedIdentities/mi-northeurope'
#      or the linked scope(s) are invalid."
#   }
# }
#
# Instructions:
# - Get access token using Azure CLI as yourself (dev scenarios)
# az account get-access-token --resource https://management.azure.com --query accessToken -o tsv | clip
#
# - Get access token using Azure CLI as Service Principal
# az login --service-principal --username APP_ID --password PASSWORD --tenant TENANT_ID
# az account get-access-token --resource https://management.azure.com --query accessToken -o tsv | clip
#
# https://docs.microsoft.com/en-us/rest/api/authorization/role-assignments
#
# Credits:
# https://github.com/arsenvlad/azure-managed-app-aks-managed-identity
# https://docs.microsoft.com/en-us/azure/lighthouse/how-to/deploy-policy-remediation#deploy-policies-that-can-be-remediated
# https://github.com/Azure/Azure-Lighthouse-samples/blob/master/templates/policy-enforce-keyvault-monitoring/enforceAzureMonitoredKeyVault.json
# https://github.com/Azure/Azure-Lighthouse-samples/blob/master/templates/policy-add-or-replace-tag/addOrReplaceTag.json
## 
@endpoint = https://management.azure.com
# https://docs.microsoft.com/en-us/azure/role-based-access-control/role-assignments-rest#new-service-principal
# https://docs.microsoft.com/en-us/rest/api/authorization/versions#2019-04-01-preview
@apiVersion = 2019-04-01-preview

# Customer subscription
@subscription = {{$dotenv subscription}}

# Customer tenant id
@tenantId = {{$dotenv tenantId}}

# Example guid value
@roleAssignmentName = da535d26-7607-499d-a827-21e669306103

# Reader
# https://docs.microsoft.com/en-us/azure/role-based-access-control/built-in-roles#all
@roleDefinitionId = acdd72a7-3385-48ef-bd42-f606fba81ae7

# User managed identity principal id
@principalId = {{$dotenv principalId}}

# Delegated managed identity resource in format:
# /subscriptions/<sub>/resourcegroups/<rg>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/<identity>"
@delegatedManagedIdentityResourceId = {{$dotenv delegatedManagedIdentityResourceId}}

# echo "accessToken=$(az account get-access-token --resource https://management.azure.com --query accessToken -o tsv)" > .env
@accessToken = {{$dotenv accessToken}}

### Create role assignment
PUT {{endpoint}}/subscriptions/{{subscription}}/providers/Microsoft.Authorization/roleAssignments/{{roleAssignmentName}}
    ?api-version={{apiVersion}}
Authorization: Bearer {{accessToken}}
Content-type: application/json

{
  "properties": {
    "roleDefinitionId": "/subscriptions/{{subscription}}/providers/Microsoft.Authorization/roleDefinitions/{{roleDefinitionId}}",
    "principalId": "{{principalId}}",
    "principalType": "ServicePrincipal",
    "delegatedManagedIdentityResourceId": "{{delegatedManagedIdentityResourceId}}" 
  }
}

### Get role assignment
GET {{endpoint}}/subscriptions/{{subscription}}/providers/Microsoft.Authorization/roleAssignments/{{roleAssignmentName}}
    ?api-version={{apiVersion}}
    &tenantid={{tenantId}}
Authorization: Bearer {{accessToken}}
Content-type: application/json

### Delete role assignment
DELETE {{endpoint}}/subscriptions/{{subscription}}/providers/Microsoft.Authorization/roleAssignments/{{roleAssignmentName}}
    ?api-version={{apiVersion}}
    &tenantid={{tenantId}}
Authorization: Bearer {{accessToken}}
Content-type: application/json
